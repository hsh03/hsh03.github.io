이것은 자바 정리문서입니다
=====================
#**자바**([영어] "웹 애플리케이션")  개발에 가장 많이 사용하는 언어 가운데 하나이고, 모바일 기기용 소프트웨어 개발에도 널리 사용하고 있다. 현재 버전 10까지 출시했다.

##자바의 개발자들은 "유닉스")  기반의 배경을 가지고 있었기 때문에 문법적인 특성은  "파스칼 (프로그래밍 언어)")이 아닌 C++의 조상인  [C 언어]) "C (프로그래밍 언어)")와 비슷하다.[[1]]  자바를 다른 컴파일언어와 구분 짓는 가장 큰 특징은 컴파일된 코드가  [플랫폼] "컴퓨팅 플랫폼")  독립적이라는 점이다. 자바 컴파일러는 자바 언어로 작성된 프로그램을  [바이트코드] "바이트코드")라는 특수한 바이너리 형태로 변환한다. 바이트코드를 실행하기 위해서는 JVM([자바 가상 머신]"자바 가상 머신"),  Java Virtual Machine)이라는 특수한 가상 머신이 필요한데, 이 가상 머신은 자바 바이트코드를 어느 플랫폼에서나 동일한 형태로 실행시킨다. 때문에 자바로 개발된 프로그램은  [CPU]"중앙 처리 장치")나  [운영 체제] "운영 체제")의 종류에 관계없이 JVM을 설치할 수 있는 시스템에서는 어디서나 실행할 수 있으며, 이 점이  [웹 애플리케이션]"웹 애플리케이션")의 특성과 맞아떨어져 폭발적인 인기를 끌게 되었다.
###다음은 자바를 사용해 작성한 전통적인  [Hello world 프로그램]이다.

public class HelloWorldApp {
  public static void main(String[] args) {
    System.out.println("Hello World!"); // Hello World 를 출력
  }
}

소스 파일명은 반드시 파일 내의 public class 이름과 동일해야 하며, 파일 확장자는 .java이어야 한다. 예를 들면, 만약 public class 이름이 HelloWorldApp이라면, 파일명은 반드시  **HelloWorldApp.java**가 되어야 한다. 이 자바 파일이 동작하기 위해서는 자바 컴파일러를 통해서 바이트코드로 컴파일되어 같은 이름의 .class 파일, 즉, HelloWorldApp.class가 생성되어야 한다. 컴파일된 class 파일은  [자바 가상 머신]을 통해 실행이 가능하다.  
 "마이크로소프트 윈도")  cmd) 에서 자바 파일을 컴파일한 후 실행하는 방법 예제
